import the module for matrix multiplication

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> matrix_mul(22, [[23, 5], [7, 2]])
Traceback (most recent call last):
...
TypeError: m_a must be a list

>>> matrix_mul([[10, 8], [8, 2]], 9)
Traceback (most recent call last):
...
TypeError: m_b must be a list

>>> matrix_mul([7], [[2, 8,], [9, 5]])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists

>>> matrix_mul([[8, 2], [4, 4]], [2])
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

>>> matrix_mul([[]], [[2, 2], [5, 2]])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> matrix_mul([[2, 2], [8, 4]], [[]])
Traceback (most recent call last):
...
ValueError: m_b can't be empty

>>> matrix_mul([[2, 2,], [3, "coder"]], [[2, 8], [4, 4]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[2, 2], [4, 4]], [[2, 2], ["SWE", 7]])
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[2, 2], [4, 4], [8, 10, 12]], [[2, 4], [8, 8]])
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[6, 2], [8, 4]], [[4, 2], [4, 4], [10, 8, 8]])
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size

>>> matrix_mul([[4, 2], [10, 8]], [[9, 6]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied
